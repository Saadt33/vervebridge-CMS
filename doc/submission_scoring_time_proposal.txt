PROPOSAL FOR HANDLING POST-MORTEM ANALYSIS AND APPEALS
======================================================



*** Rationale

The scoring process is more or less the following:

1. assign a score to each submission;

2. from scores of point 1, assign a score to each pair (user, task);

3. from scores of point 2, assign a score to each user.

Of course, passing from 2 to 3 means simply taking a sum. If, as we
are actively doing, we ignore relative score types (i.e., score types
where a submission score can be influenced by other submission), point
1 is easy, and the score of a submission depends only on its outcome.

It remains only to discuss how to pass from 1 to 2. Up to now, this is
quite messy, as there are different piece of code that works in a
not-so-coherent way.

More precisely, ScoringService compute the score as in point 1, and
transmit them to the rankings; moreover, it ask the contest object to
update its ranking view. The ranking view is not used inside the
system, as its only other appearance is in SpoolExporter. Besides,
point 3 is handled only by RWS.

In particular, passing from 1 to 2 consider every submission as valid
- even if their time is outside the contest time slot.

This is not a security problem because we enforce the submission to be
inside the contest time slot in a different way: by disabling CWS when
the contest ends.

Nonetheless, this solution is not satisfactory for several reasons:

1. contestants may want to see tasks statements and data even after
   the contest;

2. contestants may be given some time to ensure that the grading was
   done correctly (i.e., post-mortem analysis), and to do so we are
   currently forced to change the contest close time to let them
   submit other sources (or to use an empty contest with the same
   data);

3. in some situation, we may want some contestant to continue working
   after the closing time, and decide later to assign them extra time
   in case they win an appeal.



*** Implementation

From the point of view of a user, I propose that:

1. CWS will remain open for data-viewing (submissions, statements,
   ...)  after the end of the contest;

2. CWS will remain open after the end also to submissions, rendering
   very evidently that submissions won't count towards the official
   score;

3. Every algorithm that transform scores in 1 to scores in 2 will
   consider the start and the end time of the contest, and ignore
   every submission that is not inside those times - a field
   additional_time can be added to the users to assign to them more
   time, and the algorithm will consider valid also submission whose
   time is less than contest_end + additional_time.
