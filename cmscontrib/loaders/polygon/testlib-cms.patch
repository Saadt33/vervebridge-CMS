--- testlib.h.orig	2018-11-26 22:53:57.520410992 +0200
+++ testlib.h	2018-11-26 21:05:01.189487742 +0200
@@ -41,6 +41,20 @@
  *
  */
 
+/*
+ * Artem Iglikov
+ * Alexander Kernozhitsky
+ * Andrey Vihrov
+ *
+ * Modifications for Contest Management System (CMS) support:
+ *   - Write outcome to stdout and message to stderr
+ *   - Use special localizable message strings by default
+ *   - Adjust exit code
+ *   - Swap output and answer file arguments (sans comments)
+ *   - Add the "CMS" conditional macro for CMS checker format
+ *   - Add the "CMS_VERBOSE_FEEDBACK" conditional macro to enable testlib-style messages
+ */
+
 /* NOTE: This file contains testlib library for C++.
  *
  *   Check, using testlib running format:
@@ -2468,6 +2482,56 @@
     int pctype = result - _partially;
     bool isPartial = false;
 
+#ifdef CMS
+    inf.close();
+    ouf.close();
+    ans.close();
+    if (tout.is_open())
+        tout.close();
+
+#  define CMS_SUCCESS "success"
+#  define CMS_PARTIAL "partial"
+#  define CMS_WRONG   "wrong"
+#  ifndef CMS_VERBOSE_FEEDBACK
+#    define CMS_MSG(code, text) "translate:" code "\n"
+#  else
+#    define CMS_MSG(code, text) text " %s\n", msg
+#  endif
+
+    if (result == _ok) {
+        std::fprintf(stdout, "1.0\n");
+        std::fprintf(stderr, CMS_MSG(CMS_SUCCESS, "OK"));
+    } else if (result == _wa) {
+        std::fprintf(stdout, "0.0\n");
+        std::fprintf(stderr, CMS_MSG(CMS_WRONG, "Wrong Answer"));
+    } else if (result == _pe) {
+        std::fprintf(stdout, "0.0\n");
+        std::fprintf(stderr, CMS_MSG(CMS_WRONG, "Presentation Error"));
+    } else if (result == _dirt) {
+        std::fprintf(stdout, "0.0\n");
+        std::fprintf(stderr, CMS_MSG(CMS_WRONG, "Wrong Output Format"));
+    } else if (result == _points) {
+        std::string stringPoints(removeDoubleTrailingZeroes(format("%.10f", __testlib_points)));
+        std::fprintf(stdout, "%s\n", stringPoints.c_str());
+        std::fprintf(stderr, CMS_MSG(CMS_PARTIAL, "Partial Score"));
+    } else if (result == _unexpected_eof) {
+        std::fprintf(stdout, "0.0\n");
+        std::fprintf(stderr, CMS_MSG(CMS_WRONG, "Unexpected EOF"));
+    } else if (result >= _partially) {
+        double score = (double)pctype / 200.0;
+        std::fprintf(stdout, "%.3f\n", score);
+        std::fprintf(stderr, CMS_MSG(CMS_PARTIAL, "Partial Score"));
+    } else if (result == _fail) {
+        std::fprintf(stderr, "FAIL %s\n", msg);
+        halt(1);
+    } else {
+        std::fprintf(stderr, "FAIL unknown result %d\n", (int)result);
+        halt(1);
+    }
+
+    halt(0);
+#endif
+
     switch (result)
     {
     case _ok:
@@ -4081,8 +4145,13 @@
     }
 
     inf.init(argv[1], _input);
+#ifdef CMS
+    ouf.init(argv[3], _output);
+    ans.init(argv[2], _answer);
+#else
     ouf.init(argv[2], _output);
     ans.init(argv[3], _answer);
+#endif
 }
 
 void registerTestlib(int argc, ...)
